# Docker Compose for local testing
# This mimics K8s behavior - env vars only, no .env file mounting

version: '3.8'

services:
  claude-slack-bot:
    build: .
    environment:
      # Slack credentials (set these in your shell or .env for compose)
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN}
      - SLACK_APP_TOKEN=${SLACK_APP_TOKEN}
      
      # Claude configuration
      - CLAUDE_COMMAND=claude
      - CLAUDE_ALLOWED_TOOLS=gamecode-mcp2:read_file,list_files
      - CLAUDE_TIMEOUT=30
      - MAX_PROMPT_LENGTH=1000
      
      # Optional restrictions
      - ALLOWED_CHANNELS=
      - ALLOWED_USERS=
      
      # Tools configuration
      - GAMECODE_TOOLS_FILE=/config/tools.yaml
      
    volumes:
      # Mount tools config
      - ./example-tools.yaml:/config/tools.yaml:ro
      # Persist audit logs
      - ./logs:/app/logs
      
    # Run as non-root
    user: "1000:1000"
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 256M

# To run:
# export SLACK_BOT_TOKEN=xoxb-your-token
# export SLACK_APP_TOKEN=xapp-your-token  
# docker-compose up