# Kubernetes deployment for Claude Slack Bot
# This shows how to deploy the bot in production without .env files

apiVersion: v1
kind: Secret
metadata:
  name: claude-slack-bot-secrets
type: Opaque
stringData:
  slack-bot-token: "xoxb-your-bot-token"
  slack-app-token: "xapp-your-app-token"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: claude-slack-bot-config
data:
  # Claude configuration
  CLAUDE_COMMAND: "claude"
  CLAUDE_ALLOWED_TOOLS: "gamecode-mcp2:read_file,list_files,save_diagram"
  CLAUDE_TIMEOUT: "30"
  MAX_PROMPT_LENGTH: "1000"
  
  # Optional restrictions (empty = no restrictions)
  ALLOWED_CHANNELS: ""
  ALLOWED_USERS: ""
  
  # MCP server configuration
  GAMECODE_TOOLS_FILE: "/config/restricted-tools.yaml"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: claude-bot-tools
data:
  restricted-tools.yaml: |
    # Restricted tools for production bot
    tools:
      - name: read_file
        description: Read a file safely
        command: /bin/cat
        validation:
          validate_paths: true
          allow_absolute_paths: false
        args:
          - name: file
            type: string
            required: true
            is_path: true
            cli_flag: null
            
      - name: list_files
        description: List directory contents
        command: /bin/ls
        static_flags: ["-la"]
        args:
          - name: path
            type: string
            required: false
            default: "."
            cli_flag: null

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: claude-slack-bot
  labels:
    app: claude-slack-bot
spec:
  replicas: 1  # Usually only need one bot instance
  selector:
    matchLabels:
      app: claude-slack-bot
  template:
    metadata:
      labels:
        app: claude-slack-bot
    spec:
      containers:
      - name: bot
        image: your-registry/claude-slack-bot:latest
        # No .env file needed - all config from K8s
        env:
        # Secrets
        - name: SLACK_BOT_TOKEN
          valueFrom:
            secretKeyRef:
              name: claude-slack-bot-secrets
              key: slack-bot-token
        - name: SLACK_APP_TOKEN
          valueFrom:
            secretKeyRef:
              name: claude-slack-bot-secrets
              key: slack-app-token
        
        # Config from ConfigMap
        - name: CLAUDE_COMMAND
          valueFrom:
            configMapKeyRef:
              name: claude-slack-bot-config
              key: CLAUDE_COMMAND
        - name: CLAUDE_ALLOWED_TOOLS
          valueFrom:
            configMapKeyRef:
              name: claude-slack-bot-config
              key: CLAUDE_ALLOWED_TOOLS
        - name: CLAUDE_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: claude-slack-bot-config
              key: CLAUDE_TIMEOUT
        - name: MAX_PROMPT_LENGTH
          valueFrom:
            configMapKeyRef:
              name: claude-slack-bot-config
              key: MAX_PROMPT_LENGTH
        - name: ALLOWED_CHANNELS
          valueFrom:
            configMapKeyRef:
              name: claude-slack-bot-config
              key: ALLOWED_CHANNELS
        - name: ALLOWED_USERS
          valueFrom:
            configMapKeyRef:
              name: claude-slack-bot-config
              key: ALLOWED_USERS
        - name: GAMECODE_TOOLS_FILE
          valueFrom:
            configMapKeyRef:
              name: claude-slack-bot-config
              key: GAMECODE_TOOLS_FILE
              
        volumeMounts:
        - name: tools-config
          mountPath: /config
          readOnly: true
        - name: audit-logs
          mountPath: /logs
          
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
            
      volumes:
      - name: tools-config
        configMap:
          name: claude-bot-tools
      - name: audit-logs
        emptyDir: {}  # Or use PersistentVolume for production

---
# Optional: Service for health checks
apiVersion: v1
kind: Service
metadata:
  name: claude-slack-bot
spec:
  selector:
    app: claude-slack-bot
  ports:
  - port: 8080
    targetPort: 8080  # If you add health check endpoint